// Objective-C API for talking to github.com/quan-to/react-native-pgp/chevronwrap Go package.
//   gobind -lang=objc github.com/quan-to/react-native-pgp/chevronwrap
//
// File is generated by gobind. Do not edit.

#ifndef __Chevronwrap_H__
#define __Chevronwrap_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


/**
 * ChangeKeyPassword Loads, unlock and saves a new private key with a new password
 */
FOUNDATION_EXPORT NSString* _Nonnull ChevronwrapChangeKeyPassword(NSString* _Nullable keyData, NSString* _Nullable currentPassword, NSString* _Nullable newPassword, NSError* _Nullable* _Nullable error);

/**
 * GenerateKey Generates a new PGP Key with the specified parameters
 */
FOUNDATION_EXPORT NSString* _Nonnull ChevronwrapGenerateKey(NSString* _Nullable password, NSString* _Nullable identifier, long bits, NSError* _Nullable* _Nullable error);

/**
 * GetKeyFingerprints returns fingerprints of the keys inside the armored keychain
 */
FOUNDATION_EXPORT NSString* _Nonnull ChevronwrapGetKeyFingerprints(NSString* _Nullable keyData, NSError* _Nullable* _Nullable error);

/**
 * GetPublicKey Returns a public key from a loaded key
 */
FOUNDATION_EXPORT NSString* _Nonnull ChevronwrapGetPublicKey(NSString* _Nullable fingerprint, NSError* _Nullable* _Nullable error);

/**
 * LoadKey loads a key to in-memory storage
 */
FOUNDATION_EXPORT BOOL ChevronwrapLoadKey(NSString* _Nullable keyData, long* _Nullable loadedPrivateKeys, NSError* _Nullable* _Nullable error);

/**
 * SignBase64Data signs data using a unlocked in-memory private key
b64data is a raw binary in base64 format
 */
FOUNDATION_EXPORT NSString* _Nonnull ChevronwrapSignBase64Data(NSString* _Nullable b64data, NSString* _Nullable fingerprint, NSError* _Nullable* _Nullable error);

/**
 * SignData signs data using a unlocked in-memory private key
 */
FOUNDATION_EXPORT NSString* _Nonnull ChevronwrapSignData(NSData* _Nullable data, NSString* _Nullable fingerprint, NSError* _Nullable* _Nullable error);

/**
 * UnlockKey unlocks a private key on in-memory storage
 */
FOUNDATION_EXPORT BOOL ChevronwrapUnlockKey(NSString* _Nullable fingerprint, NSString* _Nullable password, NSError* _Nullable* _Nullable error);

/**
 * VerifyBase64DataSignature verifies a signature using cached public key
b64data is a raw binary in base64 format
 */
FOUNDATION_EXPORT BOOL ChevronwrapVerifyBase64DataSignature(NSString* _Nullable b64data, NSString* _Nullable signature, BOOL* _Nullable result, NSError* _Nullable* _Nullable error);

/**
 * VerifySignature verifies a signature using cached public key
 */
FOUNDATION_EXPORT BOOL ChevronwrapVerifySignature(NSData* _Nullable data, NSString* _Nullable signature, BOOL* _Nullable result, NSError* _Nullable* _Nullable error);

#endif
